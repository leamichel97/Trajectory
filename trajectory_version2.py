# -*- coding: utf-8 -*-
"""
  trajectory_version2.py generated by WhatsOpt 1.9.3
"""
from optparse import OptionParser
from openmdao.api import Problem
from openmdao.api import NonlinearBlockGS, ScipyKrylov
# from openmdao_extensions.reckless_nonlinear_block_gs import RecklessNonlinearBlockGS
from trajectory_version2_base import TrajectoryVersion2Base, TrajectoryVersion2FactoryBase

class TrajectoryVersion2(TrajectoryVersion2Base):
    """ An OpenMDAO component to encapsulate TrajectoryVersion2 analysis """
    def __init__(self, **kwargs):
        super(TrajectoryVersion2, self).__init__(**kwargs)

        # Example of manual solver adjusments (imports should be adjusted accordingly)
        # self.nonlinear_solver = NewtonSolver() 
        # self.nonlinear_solver.options['maxiter'] = 20
        # self.linear_solver = DirectSolver()

    def setup(self):
        super(TrajectoryVersion2, self).setup()


class TrajectoryVersion2Factory(TrajectoryVersion2FactoryBase):
    """ A factory to create disciplines of TrajectoryVersion2 analysis """
    pass

if __name__ == "__main__":
    parser = OptionParser()
    parser.add_option("-n", "--no-n2", action="store_false", dest='n2_view', default=True, 
                      help="display N2 openmdao viewer")
    (options, args) = parser.parse_args()

    problem = Problem()
    problem.model = TrajectoryVersion2()

    problem.setup()
    problem.final_setup()
    
    if options.n2_view:
        from packaging import version
        if version.parse(OPENMDAO_VERSION) < version.parse("2.10.0"):
            from openmdao.api import view_model as n2
        else:
            from openmdao.visualization.n2_viewer.n2_viewer import n2
            n2(problem)
